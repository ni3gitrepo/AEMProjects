<?xml version="1.0" encoding="UTF-8"?>
<!-- | Copyright 2015 Adobe Systems Incorporated | | Licensed under the Apache 
	License, Version 2.0 (the "License"); | you may not use this file except 
	in compliance with the License. | You may obtain a copy of the License at 
	| | http://www.apache.org/licenses/LICENSE-2.0 | | Unless required by applicable 
	law or agreed to in writing, software | distributed under the License is 
	distributed on an "AS IS" BASIS, | WITHOUT WARRANTIES OR CONDITIONS OF ANY 
	KIND, either express or implied. | See the License for the specific language 
	governing permissions and | limitations under the License. -->
<project xmlns="http://maven.apache.org/POM/4.0.0"

 xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
			<!-- groupid,artificatid should match root  -->
	
		<groupId>com.shop</groupId>
		<artifactId>webapi</artifactId>
		<version>0.0.1-SNAPSHOT</version>
		<relativePath>../pom.xml</relativePath>
	</parent>
	
	<properties>
	
	
	</properties>
	<artifactId>webapi.core</artifactId>
	<packaging>bundle</packaging>
	<name>webapi - Core</name>
	<description>Core bundle for webapi</description>
	
	 
	<!-- dependencies in system path and dependencies to download from maven. -->
	<build>
		<plugins>
		
			<plugin>
				<groupId>org.apache.felix</groupId>
				<artifactId>maven-scr-plugin</artifactId>
			</plugin>
			
 		 	<plugin>
				<groupId>org.apache.felix</groupId>
				<artifactId>maven-bundle-plugin</artifactId>
				<extensions>true</extensions>
				<configuration>
                    <instructions>
                        <Embed-Dependency>mail</Embed-Dependency>
                        <Embed-Directory>lib</Embed-Directory>
                        <Sling-Initial-Content>
                            SLING-INF/content/text;overwrite:=true;path:=/content,
                            SLING-INF/content/images;overwrite:=false;path:=/content/WebAPI,
                            SLING-INF/content/views;overwrite:=true;path:=/apps/WebAPI,
                            SLING-INF/content/dictionaries;overwrite:=true;path:=/apps/WebAPI,
                            SLING-INF/content/config;overwrite:=false;path:=/apps/WebAPI/install
                        </Sling-Initial-Content>
                        <Sling-Bundle-Resources>
                            /WebAPI/static/;path:=/SLING-INF/static-resources/
                        </Sling-Bundle-Resources>
                        <Import-Package>
                            !sun.*,
                            org.apache.sling.event.jobs;version="[1,3)",
                            org.springframework.validation.beanvalidation,
                            org.springframework.context,
                            org.hibernate.validator,
                            *
                        </Import-Package>
                    </instructions>
                </configuration>
			</plugin>  
			
			
		</plugins>
	</build>


<!-- in maven profile call be called by maven -P option -P means parameter e.g mvn clean install -P autoInstallPackage
  mainly to install in dev,qa,prod best practices to have separate profile for dev,qa,prod
 -->
	<profiles>
		<!-- Development profile: install only the bundle -->
		<profile>
			<id>autoInstallPackage</id>
			<activation>
			</activation>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.sling</groupId>
						<artifactId>maven-sling-plugin</artifactId>
						 <executions>
                            <execution>
                                <id>install-bundle</id>
                                <goals>
                                    <goal>install</goal>
                                </goals>
                            </execution>
                        </executions>
						<configuration>
							<!-- Note that this requires /apps/apps/install to exist!! -->
							<!-- This is typically the case when ui.apps is deployed first -->
							<!-- Otherwise, create /apps/apps/install manually (CRXDE|Lite) -->
							<slingUrlSuffix>/apps/webApi/install/</slingUrlSuffix>
							<failOnError>true</failOnError>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>
	
	
	
	
	
	
		
	<dependencies>
	
 	<dependency>
			<groupId>org.apache.felix</groupId>
			<artifactId>org.apache.felix.scr</artifactId>
		</dependency>
		<dependency>
			<groupId>org.apache.felix</groupId>
			<artifactId>org.apache.felix.scr.annotations</artifactId>
		</dependency>
<!--         <dependency>
            <groupId>biz.aQute</groupId>
            <artifactId>bndlib</artifactId>
        </dependency>
 -->		<!-- <dependency>
			<groupId>org.osgi</groupId>
			<artifactId>org.osgi.core</artifactId>
		</dependency>
		<dependency>
			<groupId>org.osgi</groupId>
			<artifactId>org.osgi.compendium</artifactId>
		</dependency> -->
		<!-- Other Dependencies -->
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
		</dependency>
		
		<!-- both below 3 packages needed [ERROR] Bundle com.web.api:webapi.core:bundle:0.0.1-SNAPSHOT : The default packa
ge '.' is not permitted by the Import-Package syntax.if javax.jcr is missed it is used
to read jcr  bundle -->
	<!-- 	<dependency>
			<groupId>javax.jcr</groupId>
			<artifactId>jcr</artifactId>
		</dependency> -->
		 
         <!-- [ERROR] Bundle com.web.api:webapi.core:bundle:0.0.1-SNAPSHOT : The default packa
ge '.' is not permitted by the Import-Package syntax.if javax.jcr is missed it is used
to read jcr  bundle -->
			
			
			
		<!-- <dependency>
            <groupId>com.adobe.aem</groupId>
            <artifactId>aem-api</artifactId>
        </dependency>
         -->
        
			
	    <!-- system paths -->
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>javax.servlet-api</artifactId>
			<version>3.1.0</version>
		</dependency>
		
		
		<!-- 
		project com.web.api:webapi.core:bundle:0.0.1-SNAPSHOT: Could not find
		artifact ojdbc:ojdbc_14g:jar:14 at specified path G:\workspace\AEM\webapi\core\lib\ojdbc14_1sg.jar
		if jar name wrongly given
		
		 -->
		<!--  --> <dependency>
			     <groupId>ojdbc</groupId>
   				 <artifactId>ojdbc_14g</artifactId>
   				 <version>14</version>
   				 <scope>system</scope>
   				 <systemPath>${project.basedir}/lib/ojdbc14_g.jar</systemPath>
		</dependency>  
	 
		<dependency>
			<groupId>javax.servlet.jsp.jstl</groupId>
			<artifactId>jstl-api</artifactId>
			<version>1.2</version>
		</dependency>


		<!-- https://mvnrepository.com/artifact/taglibs/stndard -->
		<dependency>
			<groupId>taglibs</groupId>
			<artifactId>standard</artifactId>
			<version>1.1.1</version>
		</dependency>


		 

		<!--2. Spring components -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-core</artifactId>
			<version>4.2.6.RELEASE</version>
		</dependency>

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-beans</artifactId>
			<version>4.2.6.RELEASE</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context</artifactId>
			<version>4.2.6.RELEASE</version>
		</dependency>


		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-web</artifactId>
			<version>4.2.6.RELEASE</version>
		</dependency>

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-webmvc</artifactId>
			<version>4.2.6.RELEASE</version>
		</dependency>


		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-jdbc</artifactId>
			<version>4.2.6.RELEASE</version>
		</dependency>

	</dependencies>
	
</project>
